usecase: {
	name: &u001 "商品を購入したい",
	acrors: {
		primary: "利用者",
		others: ["システム"]
	},
	before: "お金は1, 5, 10, 50, 100, 500, 1000, 2000, 5000, 10000円しか存在しない世界",
	trigger: "",
	flows: {
		basic: {
			steps: [
				&b004 "利用者は、お金を投入する。",
				&b001 "システムは、お金を受け取る",
				&b006 "システムは、投入合計金額を通知する",
				{
					condition: "商品単価以上のお金が投入された場合",
					steps: [
						&b002 "システムは、商品を選択可能にする"
					]
				}
				&b005 "利用者は、商品を選択する。",
				&b003 "システムは、残金を計算する",
				"システムは、選択された商品を排出する",
				"システムは、残金額を通知する",
				{
					condition: "残金額 > 0の場合",
					steps: [
						"システムは、残金額を排出する"
					]
				},
				"システムは、すべての商品を選択不可にする"
			],
		},
		alternative: [
# とりあえず無限在庫から始めるため
#			{
#				raise: *b002,
#				cause: "売り切れの場合",
#				steps: [
#					"システムは、商品を選択可能にはしない"
#				],
#				after: *b005
#			},
			{
				raise: *b005,
				cause: "商品が選択不可の場合",
				steps: [
					"システムは、商品選択を棄却する"
				]
				after: *b005
			}
		],
		exception: [
			{
				raise: *b001,
				cause: "10, 50, 100, 500, 1000円以外が投入される",
				steps: [
					"システムは、投入されたお金を排出する"
				],
				after: *b004
			}
		]
	},
	todo: [
		"連続購入したい", "売り切れ表示したい", "釣り銭管理したい", "在庫管理したい"
	]
}
